@page "/category"
@using TheHighInnovation.POS.Web.Model.Response.Category
@using TheHighInnovation.POS.Web.Services.Base
@inject BaseService BaseService
@inject HttpClient Http
<div class="categorypage">
    <div class="row mt-1 mb-1">
        <div class="col-4">
            <h3 style="margin:10px;">Category Index</h3>
        </div>
        <div class="col-8 text-end">
            <button class="addcatogerybtn" type="button" @onclick="() => OpenUpsertCategoryDialog()">
                Add a new category
            </button>
        </div>
    </div>

    @if (Filter.IsInitialized)
    {
        <div class="row searchlinegroup">
            <div class="col">
                @if (_pagerDto.TotalPages > 0)
                {
                    <span class="selecttext">Current Entries:</span>
                    <select class="selectcompany" @onchange="HandlePaginationChange">
                        <option value="5">5</option>
                        <option value="10" selected>10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                    </select>
                }
            </div>
            <div class="col searchline2" style="text-align:left">
                <span class="searchtext">Search:</span>
                <input type="text" class="searchinput" @bind="Filter.Search" />
                <button type="button" @onclick="HandleFilter" class="searchbuttond">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
        </div>
        <div class="tablediv">
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Parent Category</th>
                        <th>Color</th>
                        <th class="th6">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in _categories)
                    {
                        <tr>
                            <td>@category.Title</td>
                            <td>@category.ParentCategoryName</td>
                            <td><div style="background-color: @category.ImageUrl; height:50px;width:50px;"></div></td>
                            <td>
                                <i class="fa-solid fa-pen-to-square" @onclick="() => OpenUpsertCategoryDialog(category.Id)"></i>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            @if (_pagerDto.TotalPages > 0)
            {
                <div class="row">
                    <div class="col-lg-9 col-md-12 col-sm-12 d-flex pagination-wrapper justify-content-end align-items-center">
                        <ul class="pagination justify-content-end">
                            @if (_pagerDto.CurrentPage > 1)
                            {
                                <li class="page-item pointer px-1">
                                    <a class="page-link" @onclick="() => OnPagination(1)">First</a>
                                </li>
                                <li class="page-item pointer px-1">
                                    <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage - 1)">Previous</a>
                                </li>
                            }
                            @for (var pageItem = _pagerDto.StartPage; pageItem <= _pagerDto.EndPage; pageItem++)
                            {
                                <li class="page-item pointer px-1 @(pageItem == _pagerDto.CurrentPage ? "active" : "")">
                                    <a class="page-link" @onclick="() => OnPagination(pageItem)">@pageItem</a>
                                </li>
                            }
                            @if (_pagerDto.CurrentPage < _pagerDto.TotalPages)
                            {
                                <li class="page-item pointer px-1">
                                    <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage + 1)">Next</a>
                                </li>
                                <li class="page-item pointer px-1">
                                    <a class="page-link" @onclick="() => OnPagination(_pagerDto.TotalPages)">Last</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    }

    @if (_showUpsertCategoryDialog)
    {
        <ModalDialog Title="@_dialogTitle" OnClose="@OnUpsertCategoryDialogClose" OkLabel="@_dialogOkLabel">
            <form enctype="multipart/form-data">
                <div class="mb-3">
                    <label class="form-label">&nbsp;Title</label>
                    <input type="text" class="form-control" @bind="_categoryModel.Title" placeholder="Enter a category title" required="required">
                </div>
                <div class="mb-3">
                    <label class="form-label">&nbsp;Description</label>
                    <textarea type="text" class="form-control" @bind="_categoryModel.Description" placeholder="Enter the description" required="required"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label">&nbsp;Parent Category</label>
                    <select class="form-control" @bind="_categoryModel.ParentCategoryId">
                        <option selected="selected" disabled="disabled">Select a Parent Category</option>
                        @foreach (var item in _parentCategories)
                        {
                            <option value="@item.Id">@item.Title</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Select Color</label>
                    <div class="color-palette">
                        @foreach (var color in ColorOptions)
                        {
                            <div class="color-option" style="background-color: @color;" @onclick="() => SelectColor(color)">
                                @if (SelectedColor == color)
                                {
                                    <i class="bi bi-check-circle"></i>
                                }
                            </div>
                        }
                    </div>
                </div>
            </form>
            @if (!string.IsNullOrEmpty(_upsertCategoryErrorMessage))
            {
                <span>@_upsertCategoryErrorMessage</span>
            }
        </ModalDialog>
    }
</div>
