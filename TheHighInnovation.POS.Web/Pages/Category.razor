@page "/category"
@using TheHighInnovation.POS.Web.Model.Response.Category
@using TheHighInnovation.POS.Web.Services.Base
@inject BaseService BaseService
@inject HttpClient Http
<div class="categorypage">
 
    <div class="toppart">
        <div class="topheading">
            <p>Category Index</p>
        </div>
        <div class="buttonadd">
                <button class="addcatogerybtn" type="button" @onclick="() => OpenUpsertCategoryDialog()">
                Add a new category
            </button>
        </div>
    </div>


        <div class="searchdiv">
            <div class="searchbox">

                 <input type="text" class="inputsearch" placeholder="Search"/>
            </div>
            <div class="buttonbox">
            <button class="searchbutton">
            <i class="fa-solid fa-magnifying-glass"></i>
            </button>
            </div>

        </div>
 
        <div class="tablediv">
            <table class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Parent Category</th>
                        <th>Color</th>
                        <th class="th6">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in _categories)
                    {
                        <tr>
                            <td>@category.Title</td>
                            <td>@category.ParentCategoryName</td>
                            <td><div class="colorbg" style="background-color: @category.ImageUrl;"></div></td>
                            <td class="lasttd">
                                <i class="fa-solid fa-pen-to-square" @onclick="() => OpenUpsertCategoryDialog(category.Id)"></i>
                            <i class="fa-solid fa-trash" style="color: #e72929;"></i>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>


       

        </div>



    @if (_pagerDto.TotalPages > 0)
    {
        <div class="row paginationpart">
            <div class="col-lg-3 col-md-6 col-sm-6 d-flex justify-content-start">
                <div class="col-12">
                    @if (_pagerDto.TotalPages > 0)
                    {
                        <span class="selecttext">Current Entries:</span>
                        <select class="selectcompany" @onchange="HandlePaginationChange">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="20">20</option>
                        </select>
                    }
                </div>
            </div>
            <div class="col-lg-9 col-md-6 col-sm-6 d-flex pagination-wrapper justify-content-end align-items-center">

                <ul class="pagination justify-content-end">
                    @if (_pagerDto.CurrentPage > 1)
                    {
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(1)">First</a>
                        </li>
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage - 1)">Previous</a>
                        </li>
                    }
                    @if (_pagerDto.TotalPages > 1)
                    {
                        for (var pageItem = _pagerDto.StartPage; pageItem <= _pagerDto.EndPage; pageItem++)
                        {
                            var currentPageItem = pageItem;
                            <li class="page-item pointer px-1 @(currentPageItem == _pagerDto.CurrentPage ? "active" : "")">
                                <a class="page-link" @onclick="() => OnPagination(currentPageItem)">@currentPageItem</a>
                            </li>
                        }
                    }

                    @if (_pagerDto.CurrentPage < _pagerDto.TotalPages && _pagerDto.TotalItems > _pagerDto.PageSize)
                    {
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage + 1)">Next</a>
                        </li>
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.TotalPages)">Last</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

    }






    @if (_showUpsertCategoryDialog)
    {
        <ModalDialog Title="@_dialogTitle" OnClose="@OnUpsertCategoryDialogClose" OkLabel="@_dialogOkLabel">
            <form enctype="multipart/form-data">
                <div class="mb-3">
                    <label class="form-label">&nbsp;Title</label>
                    <input type="text" class="form-control" @bind="_categoryModel.Title" placeholder="Enter a category title" required="required">
                </div>
                <div class="mb-3">
                    <label class="form-label">&nbsp;Description</label>
                    <textarea type="text" class="form-control" @bind="_categoryModel.Description" placeholder="Enter the description" required="required"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label">&nbsp;Parent Category</label>
                    <select class="form-control" @bind="_categoryModel.ParentCategoryId">
                        <option selected="selected" disabled="disabled">Select a Parent Category</option>
                        @foreach (var item in _parentCategories)
                        {
                            <option value="@item.Id">@item.Title</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Select Color</label>
                    <div class="color-palette">
                        @foreach (var color in ColorOptions)
                        {
                            <div class="color-option" style="background-color: @color;" @onclick="() => SelectColor(color)">
                                @if (SelectedColor == color)
                                {
                                    <i class="bi bi-check-circle-fill"></i>
                                }
                            </div>
                        }
                    </div>
                </div>
            </form>
            @if (!string.IsNullOrEmpty(_upsertCategoryErrorMessage))
            {
                <span>@_upsertCategoryErrorMessage</span>
            }
        </ModalDialog>
    }
</div>
