@page "/product"
@using TheHighInnovation.POS.Web.Model.Response.Product
@using TheHighInnovation.POS.Web.Services.Base
@inject BaseService BaseService
@inject HttpClient Http
<div class="productpage">

	<div class="toppart">
		<div class="topheading">
			<p>Product List</p>
		</div>
		<div class="buttonadd">
			<button class="addcatogerybtn" type="button" @onclick="() => OpenUpsertProductDialog()">
				Add a new category
			</button>
		</div>
	</div>

@* 	<div class="card filter-section">
		<div class="card-body">
			<form @onsubmit="@HandleFilter">
				<div class="row">
					<div class="col-2 mt-1">
						<label class="filterby d-flex">Filter By: <i class="fa-solid fa-filter mt-1" style="font-size:16px;"></i></label>
					</div>

					<div class="col row">
						<label class="required">Category</label>
						<select aria-required="true" class="form-select" required @onchange="OnCategorySelection">
							<option value="" disabled selected> Select Categories</option>
							<option selected value="">all</option>
							@if (_categories != null)
							{

								foreach (var item in _categories)
								{

									<option value="@item.Id">@item.Title</option>
								}
							}
						</select>
						<button type="submit" value="Search" data-bs-toggle="tooltip" data-bs-placement="top" title="Click here, to search records" class=" searchbutton">
							<span class="mdi mdi-magnify search-icon"></span> <i class="fa fa-search" aria-hidden="true"></i>

						</button>
						<button type="submit" value="Search" data-bs-toggle="tooltip" data-bs-placement="top" title="Click here, to clear" class=" clearbutton">
							<span></span><i class="fa-solid fa-eraser"></i>


						</button>
					</div>

				</div>
			</form>
		</div>
	</div> *@




	<div class="searchdiv">
		<div class="searchbox">

			<input type="text" class="inputsearch" placeholder="Search" @bind="Filter.Search" />
		</div>
		<div class="buttonbox">
			<button type="button" value="Search" @onclick="HandleFilter" data-bs-toggle="tooltip" data-bs-placement="top" title="Click here, to search records" class=" searchbutton">
				<i class="fa-solid fa-magnifying-glass"></i>
			</button>
			<button type="submit" value="Search" data-bs-toggle="tooltip" data-bs-placement="top" title="Click here, to clear" class=" clearbutton clearbutton2">
				<span></span><i class="fa-solid fa-eraser"></i>
			</button>
		</div>
	</div>

		<div class="tablediv">
			<table class="table table-hover table-striped">
				<thead>
					<tr>
						<th class="th1">
							Product
						</th>
						<th class="th2">
							Unit
						</th>
						<th class="th3">
							Category
						</th>
						<th class="th4">
							Status
						</th>
						<th class="th6">
							Action
						</th>
					</tr>
				</thead>
				<tbody class="table-striped">
					@{
						IEnumerable<ProductResponseDto> products = _products;

						if (products != null && products.Any())
						{
							foreach (var product in products)
							{
								<tr>
								 	<td class="td1">
										<div class="row">
											<div class="col-3">
												<div style="background-color: @product.ProductImageUrl; height:40px;width:40px;"></div>
											</div>
											<div class="col-9 titleanddesc">
												<p class="producttitle">@product.Title</p>
												<p class="productdesc">@product.Description</p>
											</div>
										</div>
								</td> 

									<td class="titlecolumn">@product.Unit</td>
									<td class="mt-2">@(product.CategoryTitle ?? "")</td>
									<td class="mt-2">
										@(product.IsActive ? "Active" : "Inactive")
									</td>
									<td class="td6">
										<div class="d-flex actionicons">
											<i class="fa-solid fa-pen-to-square mx-1" @onclick="() => OpenUpsertProductDialog(product.Id)"></i>
											<i class="fa fa-trash mx-2"></i>
											<i class="fa fa-pause mx-2"></i>
										</div>

									</td>

								</tr>
							}
						}
					}
				</tbody>
			</table>

		</div>


	@if (_pagerDto.TotalPages > 0)
	{
		<div class="row paginationpart">
			<div class="col-lg-3 col-md-6 col-sm-6 d-flex justify-content-start">
				<div class="col-12 mt-1">
					@if (_pagerDto.TotalPages > 0)
					{
						<span class="selecttext">Current Entries:</span>
						<select class="selectcompany" @onchange="HandlePaginationChange">
							<option value="5">5</option>
							<option value="10">10</option>
							<option value="15">15</option>
							<option value="20">20</option>
						</select>
					}
				</div>
			</div>
			<div class="col-lg-9 col-md-6 col-sm-6 d-flex pagination-wrapper justify-content-end align-items-center">

				<ul class="pagination justify-content-end">
					@if (_pagerDto.CurrentPage > 1)
					{
						<li class="page-item pointer px-1">
							<a class="page-link" @onclick="() => OnPagination(1)">First</a>
						</li>
						<li class="page-item pointer px-1">
							<a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage - 1)">Previous</a>
						</li>
					}
					@if (_pagerDto.TotalPages > 1)
					{
						for (var pageItem = _pagerDto.StartPage; pageItem <= _pagerDto.EndPage; pageItem++)
						{
							var currentPageItem = pageItem;
							<li class="page-item pointer px-1 @(currentPageItem == _pagerDto.CurrentPage ? "active" : "")">
								<a class="page-link" @onclick="() => OnPagination(currentPageItem)">@currentPageItem</a>
							</li>
						}
					}

					@if (_pagerDto.CurrentPage < _pagerDto.TotalPages && _pagerDto.TotalItems > _pagerDto.PageSize)
					{
						<li class="page-item pointer px-1">
							<a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage + 1)">Next</a>
						</li>
						<li class="page-item pointer px-1">
							<a class="page-link" @onclick="() => OnPagination(_pagerDto.TotalPages)">Last</a>
						</li>
					}
				</ul>
			</div>
		</div>

	}

		
	
		</div>


	@if (_showUpsertProductDialog)
	{

		<ModalDialog Title="@_dialogTitle" OnClose="@OnUpsertProductDialogClose" OkLabel="@_dialogOkLabel">
			<form enctype="multipart/form-data">
				<div class="row">
					<div class="col">
						<label class="form-label">&nbsp;Category</label>
						<select class="form-control" @bind="_productModel.CategoryId" required="required">
							<option selected="selected" disabled="disabled">Select an category</option>
							@foreach (var item in _categories)
							{
								<option value="@item.Id">@item.Title</option>
							}
						</select>
					</div>
				</div>
				<div class="row mt-3">
					<div class="col">
						<label class="form-label">&nbsp;Title</label>
						<input type="text" class="form-control" @bind="_productModel.Title" placeholder="Enter a product title" required="required">
					</div>

					<div class="col">

						<label class="form-label">&nbsp;Unit</label>
						<select class="form-control" @bind="_productModel.Unit" required="required">
							<option selected="selected" disabled="disabled">Select a Unit</option>
							<option value="1">Per KiloGrams</option>
							<option value="2">Per Meters</option>
							<option value="3">Per Unit</option>
						</select>
					</div>
				</div>
				<div class="row mt-3">
					<div class="col">
						<label class="form-label">&nbsp;Description</label>
						<textarea type="text" class="form-control" @bind="_productModel.Description" placeholder="Enter the description" required="required"></textarea>
					</div>
				</div>
				<div class="row mt-4">
					<div class="col-10 color-palette">
						@foreach (var color in ColorOptions)
						{
							<div class="color-option" style="background-color: @color;" @onclick="() => SelectColor(color)">
								@if (SelectedColor == color)
								{
									<i class="bi bi-check-circle"></i>
								}
							</div>
						}
					</div>


				</div>
				<div class="row mt-4">
					<label class="switch">
						<input type="checkbox" @bind="_productModel.IsActive">
						<span class="slider round" checked></span>
					</label>
				</div>
				<div class="row mt-3">
					<div class="col">
						<label class="form-label">&nbsp;Sales Price</label>
						<input type="number" class="form-control" @bind="_productModel.SalesPrice" placeholder="Enter the Sales Price" required="required" />
					</div>
					<div class="col">
						<label class="form-label">&nbsp;Cost Price</label>
						<input type="number" class="form-control" @bind="_productModel.CostPrice" placeholder="Enter the Cost Price" required="required" />
					</div>
				</div>
			</form>

			@if (!string.IsNullOrEmpty(_upsertProductErrorMessage))
			{
				<span>@_upsertProductErrorMessage</span>

			}

		</ModalDialog>
	}

