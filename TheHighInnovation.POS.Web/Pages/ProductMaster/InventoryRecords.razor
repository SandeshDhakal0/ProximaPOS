@page "/inventoryrecords"
@using BlazorBootstrap

@using System.Text.Json
@using TheHighInnovation.POS.Web.Model
@using TheHighInnovation.POS.Web.Model.Request.Filter
@using TheHighInnovation.POS.Web.Model.Request.VendorManagement
@using Blazored.Typeahead
@using TheHighInnovation.POS.Web.Services.Base
@using TheHighInnovation.POS.Web.Models

@inject NavigationManager NavigationManager
@inject BaseService BaseService


<div class="container inventoryrcdpage">
    <div class="row">

        <div class="col-6 category-heading">
            <p>Purches Receipt</p>
        </div>
        <div class="col-6">
            <div class="col-6  AddCatogeryBtn">
                <button class="addbutton" >Add Purchase Receipt</button>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="row inputsrow">
            <div class="col-4 vendorname">
                <label>Vendor Name:</label>
                <input  />
            </div>
            <div class="col-4 panvatvendor">
                <lable>Batch ID</lable>
                <input />
            </div>
            <div class="col-4 isavtivevendor">
                <button class="searchbutotn">
                    Search
                </button>
            </div>

        </div>



@*         <div class="col-4 ">
            <label class="vendornamelabel">Vendor Name</label>
        </div>
            <BlazoredTypeahead class="inventoryrecords" placeholder="Vender Name"
                            SearchMethod="FetchVendors"
                           TValue="VendorListShort"                           
                           TItem="VendorListShort"
                           Value="selectedVendor" 
                            ValueChanged="SaveValue"
                           ValueExpression="@(() => selectedVendor)">
                <SelectedTemplate>@context.CompanyName</SelectedTemplate>
            <ResultTemplate>@context.CompanyName</ResultTemplate>
            <NotFoundTemplate>
                Vendor Not Found.
            </NotFoundTemplate>
        </BlazoredTypeahead>
        <div class="col-4">
            <label class="batcchidlabel">Batch ID</label>
            <select class="batchidoptions">
               
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
            </select>
        </div>
        <div class="col-4 search-btn">
            <Button Class="btn-primary searchbutton" @onclick="SearchHandle">
           
                Search

        </Button>
        </div> *@

    </div>



    <div class="row">
        <div class="col-12">
             @if(inventoryFilter.IsInitialized)
                   {
                
                @if (purchaseReceipt.Count > 0)
            {
                <div class="receipt-table">
                    <table id="example" class="displayTable ">
                    <thead class="tablehead">
                        <tr>
                            <th>VendorName</th>
                            <th>InvoiceNo</th>
                            <th>PurchaseDate</th>
                            <th>Total Cost</th>
                            <th>Status</th>
                            <th>Receipt</th>
                        </tr>
                    </thead>
                    <tbody class="tablebody">

                            @if (purchaseReceipt != null)
                        {
                                @foreach (var item in purchaseReceipt)
                            {
                                <tr> 
                                    <td>@item.VendorName</td>
                                    <td>@item.InvoiceNo</td>
                                    <td>@item.IssueDate</td>
                                    <td>@item.VendorId</td>
                                    <td>@item.PaymentStatus</td>
                                    @* <td><i class="fa-solid fa-receipt" @onclick ="() =>OpenReceipt(item.Id)" ></i></td> *@
                                     <td class="eyeicon"><i class="fa-solid fa-eye-slash" @onclick="() =>OpenReceipt(item.Id)"></i></td>
                                </tr>                                
                            }
                        }
                    </tbody>
                </table>
                </div>

                    @if (OpenReceiptModel)
                    {
                        @if (vendorwisepeoductbyidMap != null)
                        {
                            <ModalDialog  Title="" OnClose="CloseRecepitModel">
                                @foreach (var products in vendorwisepeoductbyidMap)
                                {
                                 @*    <div class="row tableabhove">
                                        <div class="col-8 leftpart">
                                            <p><span class="vendorname">Vendor Name:</span>@products.VendorName</p>
                                            <p><span class="vendorid">Vendor ID: 222 </span></p>
                                            </div>
                                            <div class="col-4 rightpart">
                                            <p><span class="panvatno">PAN/VAT :</span> @products.Pan_VatNo</p>
                                            <p><span class="issuedate">Date :</span>@products.IssueDateAd</p>
                                        </div>
                                    </div> *@
                                    <div class="top-row">
                                        <div class="column1">
                                            <p>Invoice No </p>
                                                <p class="inputfield"> Smth012</p>
                                        </div>
                                        <div class="column2">
                                            <p>Vendor Name
                                            </p>
                                                <p class="inputfield"> Smth</p>
                                             
                                        </div>
                                        <div class="column3">
                                            <p>Export
                                            </p>
                                         <p class="inputfield">
                                              <span>
                                                  <a href="">
                                              <i class="fa-solid fa-file-excel"></i>
                                                  </a>
                                              </span>
                                              <span>
                                                  <a href="">

                                              <i class="fa-solid fa-file-pdf"></i>
                                                  </a>
                                              </span>
                                              <span>
                                                  <a href="">

                                              <i class="fa-solid fa-print"></i>
                                                  </a>
                                              </span>
                                         </p>
                                         
                                        </div>
                                    </div>
                                   
                                }
                                <table id="exampleS" class="table display modaltable table-hover ">
                                <thead class="thead">
                                    <tr>
                                        <th>S.No.</th>
                                        <th colspan="2">Product/Barcode</th>
                                        <th>UoM</th>
                                        <th>Qty</th>
                                        <th>Unit</th>
                                        <th>Rate</th>
                                        <th>Disc%</th>
                                        <th>Disc Amt</th>
                                        <th>Amount</th>
                                    </tr>
                                </thead>

                                <tbody class="TableBody">                                    
                                        @foreach (var products in vendorwisepeoductbyidMap )
                                        {
                                           
                                          @foreach(var item in products.ProductDetails)
                                            {
                                                <tr class="tablerowbody">
                                                    <td>1</td>
                                                    <td colspan="2" class="bariscode"> <div class="bg"> @item.ProductName</div> </td>
                                                    <td><div class="bg">UoM</div> </td>
                                                    <td> <div class="bg">@item.Qty</div></td>
                                                    <td> <div class="bg">@item.Unit</div> </td>
                                                    <td> <div class="bg">@item.Rate</div> </td>
                                                    <td> <div class="bg">@item.DiscPercent</div></td>
                                                    <td> <div class="bg">@item.Disc</div></td>
                                                    <td> <div class="bg">@(Convert.ToDecimal(item.Rate) + Convert.ToDecimal(item.Rate)) </div></td>
                                                </tr>
                                                <tr class="tablerowbody">
                                                    <td>2</td>
                                                    <td colspan="2" class="bariscode"> <div class="bg"> @item.ProductName</div> </td>
                                                    <td><div class="bg">UoM</div> </td>
                                                    <td> <div class="bg">@item.Qty</div></td>
                                                    <td> <div class="bg">@item.Unit</div> </td>
                                                    <td> <div class="bg">@item.Rate</div> </td>
                                                    <td> <div class="bg">@item.DiscPercent</div></td>
                                                    <td> <div class="bg">@item.Disc</div></td>
                                                    <td> <div class="bg">@(Convert.ToDecimal(item.Rate) + Convert.ToDecimal(item.Rate)) </div></td>
                                                </tr>

                                                <tr class="tablerowbody">
                                                    <td>3</td>
                                                    <td colspan="2" class="bariscode"> <div class="bg"> @item.ProductName</div> </td>
                                                    <td><div class="bg">UoM</div> </td>
                                                    <td> <div class="bg">@item.Qty</div></td>
                                                    <td> <div class="bg">@item.Unit</div> </td>
                                                    <td> <div class="bg">@item.Rate</div> </td>
                                                    <td> <div class="bg">@item.DiscPercent</div></td>
                                                    <td> <div class="bg">@item.Disc</div></td>
                                                    <td> <div class="bg">@(Convert.ToDecimal(item.Rate) + Convert.ToDecimal(item.Rate)) </div></td>
                                                </tr>
                                                <tr class="tablerowbody">
                                                    <td>4</td>
                                                    <td colspan="2" class="bariscode"> <div class="bg"> @item.ProductName</div> </td>
                                                    <td><div class="bg">UoM</div> </td>
                                                    <td> <div class="bg">@item.Qty</div></td>
                                                    <td> <div class="bg">@item.Unit</div> </td>
                                                    <td> <div class="bg">@item.Rate</div> </td>
                                                    <td> <div class="bg">@item.DiscPercent</div></td>
                                                    <td> <div class="bg">@item.Disc</div></td>
                                                    <td> <div class="bg">@(Convert.ToDecimal(item.Rate) + Convert.ToDecimal(item.Rate)) </div></td>
                                                </tr>

                                                totalCostSalesSum += Convert.ToDecimal(item.Rate) + Convert.ToDecimal(item.Rate);
                                                taxAmount = totalCostSalesSum * taxRate;
                                                netamount = totalCostSalesSum + taxAmount + taxAmount  ;                                                
                                            }
                                            }
                                         </tbody>
                                </table>
                             
                                    

                                <table class=" bottombilltable">
                                    <tr class="first_tr">
                                        <td></td>
                                        <td>
                                            <table style="width:100%;" class="gross_amt_table">
                                                <tr class="gross_amt_tr">
                                                    <td><label class="gross_amt_label">Gross Amount</label></td>
                                                    <td>:</td>
                                                    <td class="gross_amt_amt_td">
                                                        @* <input class="gross_amt_input" /> *@
                                                        <div class="gross_amt_input"></div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td class="remarks_td">
                                            <label class="remarks_label">Remarks</label><br>
                                           @*  <textarea id="remarks" class="remarkstextarea" ></textarea> *@
                                           <div class="remarkstextarea" id="remarks"></div>
                                        </td>
                                        <td>
                                            <table class="remarks_nested_table" style="width:100%;">
                                                <tr>
                                                    <td class="product_amt_td"><label>Product Disc</label> </td>
                                                    <td>:</td>
                                                 
                                                    <td><div class="input"></div></td>
                                                </tr>
                                                <tr>
                                                    <td> <label>Discount</label></td>
                                                    <td>:</td>
                                               
                                                    <td><div class="input"></div></td>
                                                </tr>
                                                <tr>
                                                    <td> <label>Taxable Amount</label></td>
                                                    <td>:</td>
                                                   
                                                    <td><div class="input"></div></td>
                                                </tr>
                                                <tr class="vat_td">
                                                    <td> <label>VAT 13%</label></td>
                                                    <td>:</td>
                                                    
                                                    <td><div class="input"></div></td>

                                                </tr>
                                            </table>
                                        </td>
                                    </tr>

                                    <tr>
                                        <td rowspan="2" class="inwords_text_area">
                                            <label class="in_words_label">In Words  </label>

                                            <input id="in-words" class="full-width" />
                                        </td>

                                        <td>
                                            <table style="width:100%;" class="rounded_offtable">
                                                <td class="rounded_off_td"><label class="rounded_off_amt_label">Rounded Off</label></td>
                                                <td>:</td>
                                              
                                                <td><div class="input"></div></td>
                                            </table>
                                        </td>
                                    </tr>

                                    <tr>

                                        <td>
                                            <table class="net_amt_table" style="width:100%;">
                                                <td class="net_amt_td"><label class="net_amt_label">Net Amount</label></td>
                                                <td>:</td>
                                        
                                                <td><div class="input"></div></td>
                                            </table>
                                        </td>
                                    </tr>


                                </table>
                                <table>
                                    <td>
                                        <table class="dueandpaid_amount_table" style="width:100%;">
                                            <td class="parid_amt_td"><label class="paid_amt_label">Paid Amount :</label></td>

                                            <td><input type="text" /></td>
                                            <td><label class="due_amt_label">Due Amount :</label></td>

                                            <td><input type="text" id="paid-amount-confirm" ></td>

                                        </table>
                                    </td>
                                    <td>
                                        <table style="width:100%;" class="paid_amt_table">
                                        </table>
                                    </td>
                                </table>
                                <div class="submitbuttondiv row">
                                    <div class="col-10">
                                        <div> Bill Prepared by: <input id="prepared-by" /></div>
                                    </div>

                                </div>
                        </ModalDialog>
                        }                       
                    }
                }
            }
        </div>
    </div>
    @if (_pagerDto.TotalPages > 0)
    {
        <div class="row paginationpart">
            <div class="col-lg-3 col-md-12 col-sm-12 d-flex justify-content-start">
                <div class="col mt-1">
                    @if (_pagerDto.TotalPages > 0)
                    {
                        <span class="selecttext">Current Entries:</span>
                        <select class="selectcompany" @onchange="HandlePaginationChange">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="15">15</option>
                            <option value="20">20</option>
                        </select>
                    }
                </div>
            </div>
            <div class="col-lg-9 col-md-12 col-sm-12 d-flex pagination-wrapper justify-content-end align-items-center">

                <ul class="pagination justify-content-end">
                    @if (_pagerDto.CurrentPage > 1)
                    {
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(1)">First</a>
                        </li>
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage - 1)">Previous</a>
                        </li>
                    }
                    @if (_pagerDto.TotalPages > 1)
                    {
                        for (var pageItem = _pagerDto.StartPage; pageItem <= _pagerDto.EndPage; pageItem++)
                        {
                            var currentPageItem = pageItem;
                            <li class="page-item pointer px-1 @(currentPageItem == _pagerDto.CurrentPage ? "active" : "")">
                                <a class="page-link" @onclick="() => OnPagination(currentPageItem)">@currentPageItem</a>
                            </li>
                        }
                    }

                    @if (_pagerDto.CurrentPage < _pagerDto.TotalPages && _pagerDto.TotalItems > _pagerDto.PageSize)
                    {
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.CurrentPage + 1)">Next</a>
                        </li>
                        <li class="page-item pointer px-1">
                            <a class="page-link" @onclick="() => OnPagination(_pagerDto.TotalPages)">Last</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

    }    
</div>

@code {
   
    decimal taxableamount = 0;
    decimal totalCostSalesSum = 0;
    decimal taxRate = 0.13m; 
    decimal taxAmount = 0;
    decimal netamount = 0;
    [CascadingParameter]
    private GlobalState GlobalState { get; set; }
    private VendorListShort selectedVendor;
    private List<GetPurchaseReceipt> purchaseReceipt;
    private InventoryRecordsFilter inventoryFilter = new();
    private List<VendorWiseProductById> vendorwisepeoductbyid;
    private List<VendorWiseProductByIdMap> vendorwisepeoductbyidMap;

    private PagerDto _pagerDto { get; set; } = new();
    private bool OpenReceiptModel = false;

    protected override async Task OnInitializedAsync()
    {
        GlobalState = await BaseService.GetGlobalState();

        selectedVendor = new();    
        await LoadInventoryRecords(1);
    }

    private async Task SearchHandle()
    {
        await LoadInventoryRecords(1);
    }

    private async Task<IEnumerable<VendorListShort>> FetchVendors(string searchText)
    {
        var parameters = new Dictionary<string, string>
        {
            { "vendorname", searchText },
        };

        try
        {
            var vendors = await BaseService.GetAsync<Derived<IEnumerable<VendorListShort>>>("VendorManagement/get-vendor-for-search", parameters);
            return vendors.Result;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching vendors: {ex.Message}");
            return Enumerable.Empty<VendorListShort>();
        }
    }

    private void SaveValue(VendorListShort vendorListShort)
    {
        selectedVendor = vendorListShort;
    }

    private async Task LoadInventoryRecords(int pageNumber)
    {
        try
        {
            var parameters = new Dictionary<string, string>
                    {
                        { "pageno", pageNumber.ToString() },
                        { "pagesize", inventoryFilter.PageSize.ToString() },
                        { "vendorid", selectedVendor?.Id.ToString() ?? "0"},
                    };

            var inventoryList = await BaseService.GetAsync<Derived<List<GetPurchaseReceipt>>>("PurchaseReceipt/get-purchase-receipt-records", parameters);
            if(inventoryList != null && inventoryList.Result != null)
            {
                purchaseReceipt = inventoryList.Result;
                _pagerDto = new PagerDto(inventoryList.TotalCount ?? 1, pageNumber, inventoryFilter.PageSize);
                inventoryFilter.IsInitialized = true;
            }

        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message.ToString());
        }
    }
    private async Task HandlePaginationChange(ChangeEventArgs e)
    {
        if (e.Value == null) return;

        var pageSize = int.Parse(e.Value.ToString()!);

        inventoryFilter.PageSize = pageSize;

        await OnPagination(1);
    }

    private async Task OnPagination(int pageNumber)
    {

        await LoadInventoryRecords(pageNumber);
    }

    private async Task OpenReceipt(int vendorinventoryid)
    {
        OpenReceiptModel = true;
        try
        {
            if (vendorinventoryid != 0 || vendorinventoryid != null)
            {
                var parameters = new Dictionary<string, string>
                    {
                        { "purchasereceiptid", vendorinventoryid.ToString() }
                    };

                var productList = await BaseService.GetAsync<Derived<List<VendorWiseProductByIdMap>>>("PurchaseReceipt/get-purchase-receipt-by-id", parameters);
                if (productList != null)
                {
                    vendorwisepeoductbyidMap = productList.Result ?? [];                    
                }
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message.ToString());
        }

    }

    private void CloseRecepitModel()
    {
        OpenReceiptModel = false;
    }
}
