@using TheHighInnovation.POS.WEB.Services
<!-- BlazoredSpinner.razor -->
@inject LoaderService Preloader

@if (_isVisible)
{
    <div class="spinner">
        <!-- Your spinner UI here -->
        <div class="spinner-border text-@spinnerColor" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}

@code {
    private bool _isVisible; 
    private string spinnerColor = "primary";
    private bool _allAspectsLoaded;

    protected override void OnInitialized()
    {
        Preloader.OnShow += Show;
        Preloader.OnHide += Hide;
    }

    private void Show(SpinnerColor color)
    {
        spinnerColor = color.ToString().ToLower();
        _isVisible = true;
        StateHasChanged();
    }

    private void Hide()
    {
        if (_allAspectsLoaded)
        {
            _isVisible = false;
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Simulate loading time
            await SimulateLoading();

            // Set _allAspectsLoaded to true once all aspects of the code are loaded
            _allAspectsLoaded = true;

            // Hide the spinner
            Hide();
        }
    }

    private async Task SimulateLoading()
    {
        // Simulate loading time for various aspects of the code
        // You can replace this with actual loading logic for your application
        await Task.Delay(500); // Example delay
                               // Check other loading conditions and await additional tasks if needed
    }

    public void Dispose()
    {
        Preloader.OnShow -= Show;
        Preloader.OnHide -= Hide;
    }

   
}




