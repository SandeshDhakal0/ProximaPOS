@typeparam TItem where TItem: class

<DemoContainer>
    <ApexChart TItem="TItem" Title="@Title"
               XAxisType="XAxisType.Category"
               Options="Options"
               Debug>

        <ApexPointSeries TItem="TItem"
                         Items="Data"
                         Name="@SeriesName"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => XValueSelector(e))"
                         YValue="@(e => YValueSelector(e))"
                         OrderBy="e => e.X" />
    </ApexChart>
</DemoContainer>

@code {
    [Parameter] public IEnumerable<TItem> Data { get; set; }
    [Parameter] public string Title { get; set; } = "Generic Chart";
    [Parameter] public string SeriesName { get; set; } = "Series";
    [Parameter] public Func<TItem, string> XValueSelector { get; set; }
    [Parameter] public Func<TItem, decimal> YValueSelector { get; set; }

    public ApexChartOptions<TItem> Options { get; set; } = new();

    protected override void OnInitialized()
    {
        Options.Debug = true;
        Options.ForecastDataPoints = new ForecastDataPoints
        {
            Count = 3,
            DashArray = 4,
            FillOpacity = 0.5,
        };
        Options.Tooltip = new Tooltip { X = new TooltipX { Format = @"MMMM \ yyyy" } };
        Options.Subtitle = new Subtitle { OffsetY = 15, Text = "Sales data over time" };
        Options.Tooltip = new Tooltip
        {
            Y = new TooltipY
            {
                Title = new TooltipYTitle { Formatter = @"function(name) { return name + ':' }" },
                Formatter = @"function(value, { series, seriesIndex, dataPointIndex, w }) { return 'RsA' + value.toFixed(2) }"
            },
        };
        Options.Xaxis = new XAxis
        {
            Title = new AxisTitle
            {
                OffsetY = 5,
                Text = "Period",
                Style = new AxisTitleStyle { FontSize = "14px", Color = "lightgrey" }
            },
            AxisBorder = new AxisBorder
            {
                Height = 2
            }
        };
        Options.Yaxis =
        [
            new YAxis
            {
                DecimalsInFloat = 2,
                Labels = new YAxisLabels { Rotate = -45, Style = new AxisLabelStyle { FontSize = "10px" } },
                Title = new AxisTitle { Text = "Sales Amount", Style = new AxisTitleStyle { FontSize = "14px", Color = "lightgrey" } }
            }

        ];

        Options.Annotations = new Annotations { Yaxis = new List<AnnotationsYAxis>() };
        Options.Annotations.Yaxis.Add(new AnnotationsYAxis
        {
            Y = 60000,
            BorderWidth = 2,
            StrokeDashArray = 5,
            BorderColor = "red",
            Label = new Label { Text = "Target Sales" }
        });
    }
}